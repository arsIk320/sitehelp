import json
import secrets
from flask import Flask, request, render_template, redirect, url_for, flash, session
import sqlite3
from werkzeug.security import generate_password_hash, check_password_hash
import os

app = Flask(__name__)
app.secret_key = secrets.token_hex(16)
DATABASE_PATH = os.path.join(os.path.dirname(os.path.abspath(__file__)), 'database (1).db')

def get_db_connection():
    conn = sqlite3.connect(DATABASE_PATH)
    conn.row_factory = sqlite3.Row
    return conn

def generate_invite_code():
    """Генерирует безопасный случайный код приглашения."""
    return secrets.token_urlsafe(16)

@app.route("/")
def Mainpage():
    return render_template("Mainpage.html")



@app.route("/login", methods=['GET', 'POST'])
def login():
    if request.method == 'POST':
        name = request.form.get('name')
        surname = request.form.get('surname')
        login = request.form.get('login')
        email = request.form.get('email')
        password = request.form.get('password')

        hashed_password = generate_password_hash(password)
        conn = get_db_connection()
        cursor = conn.cursor()
        cursor.execute('INSERT INTO users (name, surname, login, email, password) VALUES (?,?,?,?,?)',
                       (name, surname, login, email, hashed_password))
        conn.commit()
        user_id = cursor.lastrowid
        conn.close()
        session['user_id'] = user_id
        return redirect(url_for("Mainpage"))

    return render_template("login.html")

@app.route("/enter", methods=['GET', 'POST'])
def enter():
    if request.method == 'POST':
        login = request.form.get('login')
        email = request.form.get('email')
        password = request.form.get('password')

        conn = get_db_connection()
        cursor = conn.cursor()
        cursor.execute('SELECT * FROM users WHERE login=? AND email=?', (login, email))
        user = cursor.fetchone()
        print(f"Данные из базы: {user}")  # Вывод данных из базы для проверки
        conn.close()

        if user:
            # Проверяем пароль
            if check_password_hash(user[5], password):
                session['user_id'] = user[0]
                flash("Вход выполнен успешно!", "success")
                return redirect(url_for("Mainpage"))
            else:
                flash("Неправильный пароль.", "error")
        else:
            flash("Неправильный логин или email.", "error")
    return render_template("enter.html")



@app.route("/account")
def account():
    print(session['user_id'])
    if 'user_id' in session:
        conn = get_db_connection()
        cursor = conn.cursor()
        print(session['user_id'])
        cursor.execute('SELECT name, surname, login, email FROM users WHERE id = ?', (session['user_id'],))
        user = cursor.fetchone()
        conn.close()
        if user:
            return render_template('account.html', user=user)
        else:
            flash("Профиль не найден.", "error")
            return redirect(url_for('Mainpage'))
    else:
        flash("Вы не авторизованы.", "error")
        return redirect(url_for('Mainpage'))


places = {
    '1': {'title': 'Московский кремль',
          'description': 'Московский Кремль — это исторический и архитектурный комплекс, расположенный в центре Москвы, Россию. Он служит официальной резиденцией Президента Российской Федерации и является объектом Всемирного наследия ЮНЕСКО. Кремль известен своими невероятными историческими и культурными памятниками, такими как соборы, церкви, стены и башни. Исторически Кремль был центром российской власти и играл важную роль в политической, религиозной и культурной жизни страны. Его стены, построенные в XV-XVI веках, представляют собой отличный пример русского архитектурного стиля. Внутри Кремля расположены такие известные здания, как Успенский собор, Архангельский собор, Благовещенский собор, а также Государственный исторический музей. Кремль также является популярным туристическим направлением, привлекающим миллионы посетителей как из России, так и из-за рубежа. Здесь можно увидеть великолепные архитектурные произведения, красивые площади и живописные виды на Москву-реку.'},
    '2': {'title': 'Большой театр',
          'description': 'Большой театр (или Большой театр России) — один из самых известных театров в мире, расположенный в центре Москвы. Он был основан в 1776 году и стал символом русской культуры и искусства. Театр славится своими балетными и оперными постановками, а также великолепной архитектурой. Здание театра было реконструировано и восстановлено несколько раз из-за пожаров и войн. В 2011 году после капитального ремонта театр вновь открыл свои двери для зрителей. Архитектурный стиль театра можно отнести к классицизму с элементами барокко. Главный фасад украшен колоннами и величественным фронтоном. На крыше стоит знаковая скульптура «Алабе́рда» с четвёркой, что делает театр легко узнаваемым. Сегодня Большой театр продолжает привлекать внимание зрителей со всего мира, представляя уникальные спектакли и сохраняя традиции русского театрального искусства.'},
    '3': {'title': 'Московский зоопарк',
          'description': 'Московский зоопарк — один из старейших зоопарков в России и Европы, открытый в 1864 году. Он расположен в центре Москвы, на берегу реки Фрунзенки. Зоопарк занимает территорию около 21 гектара, на которой проживают более 8000 животных, представляющих более 600 видов. Московский зоопарк активно участвует в программах по сохранению исчезающих видов и проводит научные исследования, образовательные программы для детей и взрослых. Зоопарк стал популярным местом не только для туристов, но и для местных жителей. Он включает в себя не только выставки с животными, но и специальные площадки для развлечений, кафе и магазины.'},
    '4': {'title': 'Школа акварели Сергея Андрияки',
          'description': 'Школа акварелей Сергея Андрияки, основанная в 1993 году, является одной из самых известных учебных заведений в России, специализирующихся на обучении акварельной живописи. Сергей Андрияка, признанный мастер акварели и преподаватель, создал эту школу с целью передать знания и передвижническое искусство следующему поколению художников. Школа предлагает курсы для различных уровней подготовки — от новичков до профессионалов, охватывающие как теоретические, так и практические аспекты акварельной техники. Обучение включает изучение исторических аспектов акварельной живописи, работы с различными материалами, такими как акварельные краски, бумаги и кисти, а также освоение основ композиции, колорита и техники нанесения красок. Студенты школы получают уникальную возможность развить свои навыки, участвуя в мастер-классах, выездных пленэрах и выставках. Кроме того, школа регулярно организует выставки работ учеников, что позволяет молодым художникам продемонстрировать свои достижения широкой аудитории.'},
    '5': {'title': 'Собор Василия Блаженного',
          'description': 'Собор Василия Блаженного, также известный как Покровский собор, является одной из самых известных достопримечательностей Москвы. Он расположен на Красной площади и был построен в 1555–1561 годах по приказу Ивана Грозного в честь победы над Казанским ханством. Собор славится своими яркими куполами и уникальной архитектурой, сочетая элементы восточного и русского стилей. Каждый из восьми куполов символизирует одного из мучеников, почитаемых в русской православной церкви. Сегодня собор является действующим храмом и музеем, привлекающим туристов со всего мира.'},
    '6': {'title': 'Москва-Сити',
          'description': 'Москва-Сити — это деловой район в центре Москвы, который стал символом современной архитектуры города. Строительство района началось в конце 1990-х годов, и на сегодняшний день он включает в себя несколько высоких небоскребов, среди которых знаменитые «Башня Федерация», «Восточная Европа», «Космос» и другие. Основной целью создания Москва-Сити было создание нового финансового и делового центра, повышение инвестиционной привлекательности столицы, а также улучшение деловой инфраструктуры. В рамках проекта планировалось создание офисных, жилых, гостиничных и торговых комплексов.'},
    '7': {'title': 'Северный Речной Вокзал',
          'description': 'Северный Речной Вокзал — один из самых известных речных вокзалов в Москве, открытый в 1937 году. Это уникальное сооружение сочетает в себе элементы архитектуры в стиле сталинского неоклассического направления и популярного в то время стиля "арт-деко". Вокзал стал важным транспортным узлом для речных пассажирских перевозок, а также местом отдыха и развлечений для москвичей и туристов. Северный Речной Вокзал находится на берегу реки Москвы и предлагает услуги по подписке на круизы по рекам и каналам города. Это также памятник архитектуры, который включает в себя оригинальную архитектуру, фонтаны, площади и красивые пейзажи. Вокзал стал не только транспортной развязкой, но и важной частью культурной жизни столицы.'},
    '8': {'title': 'Петровский путевой дворец',
          'description': 'Петровский путевой дворец — это историческое здание, расположенное в Москве, построенное в стиле русского барокко. Дворец был возведен в конце XVII века по распоряжению Петра I как гостиница для царских путешествующих и иностранных гостей, прибывающих в Москву. Архитектором дворца считается Иван Зарудный. Здание имеет два этажа и украшается красивыми декоративными элементами, которые отражают стиль того времени. Дворец использовался не только как место для остановки высокопоставленных гостей, но и для проведения официальных приемов. В настоящее время Петровский путевой дворец является музейным комплексом и культурным центром, где проводятся выставки и другие мероприятия.'},
    '9': {'title': 'Останкинская телебашня',
          'description': 'Останкинская телебашня — это одна из самых высоких и известных телебашен в мире, расположенная в Москве. Она была построена в 1967 году как объект для передачи телевидения и радиосигналов. Высота Останкинской телебашни составляет 540 метров, что делает её самой высокой в Европе. Башня является архитектурным памятником и символом Москвы. На высоте 337 метров расположена смотровая площадка, откуда открывается великолепный вид на город. Останкинская телебашня также имеет ресторан и несколько научно-исследовательских лабораторий. В 2005 году башня была повреждена в результате пожара, но затем восстановлена и вновь открыта для посетителей.'},
    '10': {'title': 'Музей космонавтики',
           'description': 'Музей космонавтики, расположенный на территории ВДНХ (Выставка достижений народного хозяйства), открыт в 1964 году и является одним из ключевых музеев в России, посвящённых достижениям в области космонавтики. В музее представлена обширная экспозиция, охватывающая важнейшие моменты в истории освоения космоса. Здесь можно увидеть оригинальные образцы космических аппаратов, спутников, а также множество экспонатов, связанных с деятельностью советской и российской космонавтики. Главной гордостью музея является макет ракеты-носителя "Союз", а также 10-метровый оригинал "Востока", первого космического корабля, на котором совершил полет Юрий Гагарин. Музей также проводит образовательные программы, экскурсии и научные семинары, что делает его важной площадкой для популяризации космонавтики и науки в целом.'},
    '11': {'title': 'Москвариум',
           'description': 'Москвариум — это один из крупнейших аквариумов в Европе, расположенный в Москве на ВДНХ. Москвариум был открыт в 2015 году и занимает площадь около 30 000 квадратных метров. Он содержит более 800 видов живых существ, включая рыбы, морских млекопитающих, рептилий и беспозвоночных. Основной целью Москвариума является не только развлечение посетителей, но и просвещение о важности охраны окружающей среды и сохранения водных экосистем. В Москвариуме можно увидеть аквариумы с экзотическими морскими обитателями, интерактивные экспозиции и шоу с участием животных, таких как дельфины и морские львы. Также здесь проводятся образовательные программы и лекции для широкой аудитории и школьников.'},
    '12': {'title': 'Усадьба Грачёвка',
           'description': 'Усадьба Грачёвка расположена в Подмосковье и относится к архитектурным памятникам XVIII-XIX веков. Она представляет собой пример усадебного строительства той эпохи и включает в себя жилой дом, парк и хозяйственные постройки. Строение отличается характерными чертами русского классицизма. Усадьба была построена для дворянского семейства, и её территория занимает живописные участки с прудами, садами и парками. Усадьба Грачёвка имеет интересную историю, связанную с культурной и общественной жизнью своих хозяев, они активно участвовали в жизни общества того времени. В разные эпохи усадьба служила местом встреч известных личностей, что придает ей дополнительную историческую ценность.'},
    '13': {'title': 'Музей оружия',
           'description': 'Музей оружия, расположенный в Москве, представляет собой уникальное заведение, посвященное истории и развитию оружия разных эпох и народов. В коллекции музея есть как холодное, так и огнестрельное оружие, включая экспонаты, относящиеся к различным военным конфликтам и историческим событиям. Музей предлагает посетителям разнообразные выставки и экскурсии, где можно узнать не только о самих образцах оружия, но и о контексте их использования и производстве.'},
    '14': {'title': 'Парк Сокольники',
           'description': 'Парк Сокольники — это один из крупнейших парков Москвы, расположенный на северо-востоке столицы. Он занимает площадь более 600 гектаров и предоставляет разнообразные возможности для рекреационного отдыха, спорта и культурных мероприятий. Парк был основан в 1778 году и представляет собой уникальное сочетание исторической архитектуры и природного ландшафта.'},
}


@app.route('/information')
def information():
    id = request.args.get('id')
    if id and id in places:
        place = places[id]
        return render_template('information.html', title=place['title'], description=place['description'])
    else:
        return 'Информация не найдена', 404


tests = {
    1: {
        "title": "Тест по истории Московского Кремля",
        "questions": [
            {
                "question": "В каком году началось строительство Московского Кремля?",
                "answers": ["A 1147", "B 1237", "C 1495", "D 1712"],
                "correct": "B"
            },
            {
                "question": "Какой собор является главной церковью Московского Кремля?",
                "answers": ["A Архангельский собор", "B Успенский собор", "C Благовещенский собор", "D Василия Блаженного"],
                "correct": "B"
            },
            {
                "question": "Какой из перечисленных элементов недоступен для посещения туристами?",
                "answers": ["A Комендантский сад", "B Крепостные стены", "C Овальный зал", "D Спасская башня"],
                "correct": "C"
            },
            {
                "question": "Какое событие произошло в Кремле в 1917 году?",
                "answers": ["A Окончание Второй мировой войны", "B Февральская революция", "C Октябрьская революция", "D Образование СССР"],
                "correct": "C"
            },
            {
                "question": "Как называются башни Кремля, каждая из которых имеет свое имя?",
                "answers": ["A Стенки", "B Здания", "C Дворцы", "D Башни"],
                "correct": "D"
            },
            {
                "question": "Какой из следующих объектов невозможно увидеть в Московском Кремле?",
                "answers": ["A Троицкая башня", "B ГУМ", "C Куранты", "D Никольская башня"],
                "correct": "B"
            },
            {
                "question": "Как зовут президента России, который живет в Кремле?",
                "answers": ["A Владимир Путин", "B Борис Ельцин", "C Дмитрий Медведев", "D Михаил Горбачев"],
                "correct": "A"
            },
            {
                "question": "Каков главный архитектурный стиль зданий Московского Кремля?",
                "answers": ["A Готика", "B Барокко", "C Романский", "D Русское православное зодчество"],
                "correct": "B"
            },
            {
                "question": "В каком из соборов Кремля проходило коронование царей?",
                "answers": ["A Спасский собор", "B Успенский собор", "C Храм Христа Спасителя", "D Троице-Сергиева лавра"],
                "correct": "B"
            },
            {
                "question": "Какую функцию выполнял Московский Кремль в прошлом?",
                "answers": ["A Военная крепость", "B Институт искусств", "C Центр бизнес-активности", "D Студенческий городок"],
                "correct": "A"
            }
        ]
    },
    2: {
        "title": "Тест по истории Большого театра",
        "questions": [
            {
                "question": "В каком году был основан Большой театр?",
                "answers": ["A 1755", "B 1776", "C 1800", "D 1820"],
                "correct": "B"
            },
            {
                "question": "Какой стиль архитектуры преобладает в здании Большого театра?",
                "answers": ["A Готика", "B Классицизм", "C Ренессанс", "D Барокко"],
                "correct": "B"
            },
            {
                "question": "Как называется скульптура, установленная на крыше театра?",
                "answers": ["A Дельфин", "B Пегас", "C Четвёрка", "D Грифон"],
                "correct": "C"
            },
            {
                "question": "Какой тип спектаклей наиболее часто представляется в Большом театре?",
                "answers": ["A Комедии", "B Опера и балет", "C Драма", "D Мюзиклы"],
                "correct": "B"
            },
            {
                "question": "Из-за каких причин здание театра было реконструировано?",
                "answers": ["A Увеличение числа зрителей", "B Пожары и войны", "C Обновление технологий", "D Дефицит средств"],
                "correct": "B"
            },
            {
                "question": "Где расположен Большой театр?",
                "answers": ["A На улице Арбат", "B На площади Революции", "C В центре Москвы", "D В Золотом кольце"],
                "correct": "C"
            },
            {
                "question": "Какой элемент архитектуры выделяет Большой театр среди других зданий?",
                "answers": ["A Его размеры", "B Уникальная форма окна", "C Золотой купол", "D Колонны и фронтон"],
                "correct": "D"
            },
            {
                "question": "Сколько раз здание театра основательно ремонтировалось?",
                "answers": ["A Один раз", "B Два раза", "C Три раза", "D Четыре раза"],
                "correct": "C"
            },
            {
                "question": "Когда состоялось последнее восстановление Большого театра?",
                "answers": ["A 1990", "B 2000", "C 2011", "D 2020"],
                "correct": "C"
            },
            {
                "question": "Какой эффект имеет спектакли Большого театра на зрителей?",
                "answers": ["A Они радостные", "B Они напряжённые", "C Они вдохновляющие", "D Они скучные"],
                "correct": "C"
            }
        ]
    },
    5: {
        "title": "Тест по истории Собора Василия Блаженного",
        "questions": [
            {
                "question": "В каком году был завершен строительству Собор Василия Блаженного?",
                "answers": ["A 1500", "B 1555", "C 1561", "D 1580"],
                "correct": "B"
            },
            {
                "question": "Какой император приказал построить этот собор?",
                "answers": ["A Петр I", "B Иван III", "C Иван Грозный", "D Николай II"],
                "correct": "C"
            },
            {
                "question": "Чем знамениты купола Собора Василия Блаженного?",
                "answers": ["A Они сделаны из золота", "B У них разные формы и цвета", "C Они являются одним целым", "D Они покрыты мозаикой"],
                "correct": "B"
            },
            {
                "question": "Какой стиль архитектуры преобладает в сооружении?",
                "answers": ["A Готика", "B Ренессанс", "C Русское православное зодчество", "D Барокко"],
                "correct": "C"
            },
            {
                "question": "Как называется главный престол собора?",
                "answers": ["A Престол Василия", "B Престол Покрова", "C Престол Спасителя", "D Престол святого Георгия"],
                "correct": "B"
            },
            {
                "question": "Какой участок площади находится перед Собором Василия Блаженного?",
                "answers": ["A Красная площадь", "B Болотная площадь", "C Лубянская площадь", "D Покровка"],
                "correct": "A"
            },
            {
                "question": "На какой праздник в соборе проходит служба в честь праздника Покрова Пресвятой Богородицы?",
                "answers": ["A Рождество", "B Пасха", "C Покров", "D Троица"],
                "correct": "C"
            },
            {
                "question": "Какой музей находится в Соборе Василия Блаженного?",
                "answers": ["A Музей современного искусства", "B Исторический музей", "C Государственный музей архитектуры", "D Музей церковной культуры"],
                "correct": "D"
            },
            {
                "question": "Сколько куполов у Собора Василия Блаженного?",
                "answers": ["A 5", "B 7", "C 8", "D 10"],
                "correct": "C"
            },
            {
                "question": "Какое событие вдохновило на строительство собора?",
                "answers": ["A Открытие нового торгового пути", "B Победа над Казанским ханством", "C Принятие православия", "D Построение первого Кремля"],
                "correct": "B"
            }
        ]
    },
    6: {
        "title": "Тест по истории Москва-Сити",
        "questions": [
            {
                "question": "В каком году началось строительство района Москва-Сити?",
                "answers": ["A 1995", "B 1997", "C 2000", "D 2005"],
                "correct": "B"
            },
            {
                "question": "Какой из следующих небоскребов расположен в Москва-Сити?",
                "answers": ["A Башня Восток", "B Башня Федерации", "C Лахта Центр", "D Восточная Европа"],
                "correct": "B"
            },
            {
                "question": "Какова высота одной из самых высоких башен в Москва-Сити?",
                "answers": ["A 200 метров", "B 300 метров", "C 379 метров", "D 450 метров"],
                "correct": "C"
            },
            {
                "question": "Какой из следующих функциональных объектов не относится к проекту Москва-Сити?",
                "answers": ["A Офисы", "B Жилые комплексы", "C Гостиницы", "D Заводы"],
                "correct": "D"
            },
            {
                "question": "Какой архитектурный стиль можно увидеть в строительстве зданий Москва-Сити?",
                "answers": ["A Классика", "B Арт-деко", "C Современный", "D Барокко"],
                "correct": "C"
            },
            {
                "question": "Какой из этих зданий является самой высокой башней в России на момент открытия?",
                "answers": ["A Восточная Европа", "B Башня Федерации", "C Останкинская башня", "D Лахта Центр"],
                "correct": "B"
            },
            {
                "question": "Какой тип транспорта обеспечивает доступ к Москва-Сити?",
                "answers": ["A Такси", "B Автобусы", "C Метро", "D Все вышеперечисленное"],
                "correct": "D"
            },
            {
                "question": "Какой многопрофильный комплекс открывается в Москва-Сити в 2023 году?",
                "answers": ["A ТРЦ «Афимолл»", "B ММДЦ «Москва-Сити»", "C Небоскрёб «Башня Федерация»", "D Центр Международной Торговли"],
                "correct": "B"
            },
            {
                "question": "С какой целью был построен район Москва-Сити?",
                "answers": ["A Для создания жилых районов", "B Для улучшения инфраструктуры столицы", "C Для открытия новых станций метро", "D Для проведения выставок"],
                "correct": "B"
            },
            {
                "question": "Какой площадкой в Москве является символом деловой активности в стране?",
                "answers": ["A Красная площадь", "B Арбат", "C Москва-Сити", "D Кутузовский проспект"],
                "correct": "C"
            }
        ]
    },
    3: {
        "title": "Тест по истории Московского зоопарка",
        "questions": [
            {
                "question": "В каком году был открыт Московский зоопарк?",
                "answers": ["A 1864", "B 1900", "C 1924", "D 1991"],
                "correct": "A"
            },
            {
                "question": "Какой вид животных является самым крупным представителем зоопарка?",
                "answers": ["A Африканский слон", "B Бурый медведь", "C Тигр", "D Жираф"],
                "correct": "A"
            },
            {
                "question": "Где расположен Московский зоопарк?",
                "answers": ["A На ВДНХ", "B В центре Москвы", "C В Подмосковье", "D На Смоленской площади"],
                "correct": "B"
            },
            {
                "question": "Сколько видов животных можно увидеть в Московском зоопарке?",
                "answers": ["A Более 100", "B Более 300", "C Более 600", "D Более 8000"],
                "correct": "C"
            },
            {
                "question": "Какую функцию выполняет Московский зоопарк в области сохранения животных?",
                "answers": ["A Развлекательную", "B Научную и образовательную", "C Спортивную", "D Культурную"],
                "correct": "B"
            },
            {
                "question": "Какой водоем находится рядом с Московским зоопарком?",
                "answers": ["A Москва-река", "B Река Фрунзенка", "C Клязьма", "D Ока"],
                "correct": "B"
            },
            {
                "question": "Какой из видов животных не представлен в Московском зоопарке?",
                "answers": ["A Пингвин", "B Кенгуру", "C Панды", "D Крокодил"],
                "correct": "C"
            },
            {
                "question": "Какую образовательную программу проводит зоопарк?",
                "answers": ["A Курсы по кулинарии", "B Программы по экологии и зоологии", "C Изучение иностранных языков", "D Искусство и живопись"],
                "correct": "B"
            },
            {
                "question": "Какой известный архитектурный элемент находится в Московском зоопарке?",
                "answers": ["A Кушетка", "B Арка", "C Главный вход с фигурами леопардов", "D Колокольня"],
                "correct": "C"
            },
            {
                "question": "Какова площадь Московского зоопарка?",
                "answers": ["A 10 гектаров", "B 21 гектар", "C 50 гектаров", "D 30 гектаров"],
                "correct": "B"
            }
        ]
    },
    7: {
        "title": "Тест по истории Северного Речного Вокзала",
        "questions": [
            {
                "question": "В каком году был открыт Северный Речной Вокзал?",
                "answers": ["A 1931", "B 1937", "C 1945", "D 1957"],
                "correct": "B"
            },
            {
                "question": "Какой стиль архитектуры преобладает в дизайне Северного Речного Вокзала?",
                "answers": ["A Готический", "B Барокко", "C Сталинский неоклассицизм", "D Модерн"],
                "correct": "C"
            },
            {
                "question": "Где расположен Северный Речной Вокзал?",
                "answers": ["A На берегу Москвы-реки", "B На берегу Оки", "C На берегу Волги", "D На берегу Невы"],
                "correct": "A"
            },
            {
                "question": "Какой вид транспорта обслуживается на Северном Речном Вокзале?",
                "answers": ["A Автобусы", "B Поезда", "C Речные суда", "D Такси"],
                "correct": "C"
            },
            {
                "question": "Какое здание является центральной частью комплекса Северного Речного Вокзала",
                "answers": ["A Пассажирский терминал", "B Административное здание", "C Культурный центр", "D Ресторан"],
                "correct": "A"
            },
            {
                "question": "Какое событие происходило в 1941 году, которое затронуло Северный Речной Вокзал?",
                "answers": ["A Открытие нового терминала", "B Эвакуация граждан", "C Ремонт зданий", "D Празднование годовщины"],
                "correct": "B"
            },
            {
                "question": "Какова основная функция Северного Речного Вокзала в современности?",
                "answers": ["A Речной туризм", "B торговый центр", "C Спортивное сооружение", "D Выставочный зал"],
                "correct": "A"
            },
            {
                "question": "Какие виды круизов предлагаются с Северного Речного Вокзала?",
                "answers": ["A Круизы по Черному морю", "B Круизы по рекам и каналам Москвы", "C Международные круизы", "D Океанские круизы"],
                "correct": "B"
            },
            {
                "question": "Какой элемент окружающей инфраструктуры можно найти рядом с Северным Речным Вокзалом?",
                "answers": ["A Гостиницы", "B Станции метро", "C Пенные бары", "D Зоны отдыха с фонтанами"],
                "correct": "D"
            },
            {
                "question": "Какую популярность имеет Северный Речной Вокзал среди местных жителей и туристов?",
                "answers": ["A Не пользуется популярностью", "B Является одним из популярных мест для отдыха", "C Только для проходящих мимо туристов", "D Используется исключительно местными жителями"],
                "correct": "B"
            }
        ]
    },
    8: {
        "title": "Тест по истории Петровского путевого дворца",
        "questions": [
            {
                "question": "В каком стиле был построен Петровский путевой дворец?",
                "answers": ["A Готика", "B Русское барокко", "C Ренессанс", "D Классицизм"],
                "correct": "B"
            },
            {
                "question": "В каком веке был построен Петровский путевой дворец?",
                "answers": ["A XV век", "B XVII век", "C XVIII век", "D XIX век"],
                "correct": "B"
            },
            {
                "question": "Для кого предназначался Петровский путевой дворец?",
                "answers": ["A Для крестьян", "B Для царей и иностранных гостей", "C Для купцов", "D Для солдат"],
                "correct": "B"
            },
            {
                "question": "Кто был архитектором Петровского путевого дворца?",
                "answers": ["A Фёдор Челищев", "B Иван Зарудный", "C Василий Баженов", "D Алексея Мусина"],
                "correct": "B"
            },
            {
                "question": "Какое событие произошло в Петровском путевом дворце?",
                "answers": ["A Первое заседание Государственной Думы", "B Открытие Московского университета", "C Проведение официальных приемов", "D Создание Конституции"],
                "correct": "C"
            },
            {
                "question": "Какой элемент декора можно увидеть на фасаде дворца?",
                "answers": ["A Конические шпили", "B Колонны", "C Мозаики", "D Арки"],
                "correct": "B"
            },
            {
                "question": "Какая часть Москвы является расположением Петровского путевого дворца?",
                "answers": ["A Юг", "B Запад", "C Север", "D Центр"],
                "correct": "C"
            },
            {
                "question": "В каком состоянии находится Петровский путевой дворец сейчас?",
                "answers": ["A Закрыт на реконструкцию", "B Является музеем и культурным центром", "C Приватизирован", "D Полностью разрушен"],
                "correct": "B"
            },
            {
                "question": "Какой предмет искусства можно увидеть в экскурсиях по дворцу?",
                "answers": ["A Коллекция картин", "B Древние рукописи", "C Архитектурные макеты", "D Скульптуры"],
                "correct": "A"
            },
            {
                "question": "Какой имеется доступ к дворцу для посетителей?",
                "answers": ["A Бесплатный", "B По записи", "C Платный", "D Условный"],
                "correct": "C"
            }
        ]
    },
    12: {
        "title": "Тест по истории Усадьбы Грачёва",
        "questions": [
            {
                "question": "В каком веке была построена усадьба Грачёвка?",
                "answers": ["A XVIII век", "B XIX век", "C XX век", "D XVII век"],
                "correct": "A"
            },
            {
                "question": "Какой стиль архитектуры преобладает в усадьбе Грачёвка?",
                "answers": ["A Барокко", "B Классицизм", "C Романский", "D Готика"],
                "correct": "B"
            },
            {
                "question": "Для какого социального класса была построена усадьба?",
                "answers": ["A Крестьяне", "B Рабочие", "C Дворяне", "D Купцы"],
                "correct": "C"
            },
            {
                "question": "Какое сооружение находится на территории усадьбы?",
                "answers": ["A Музей", "B Проект зоопарка", "C Жилой дом", "D Церковь"],
                "correct": "C"
            },
            {
                "question": "Каков основной материал, используемый в строительстве усадьбы Грачёвка?",
                "answers": ["A Дерево", "B Кирпич", "C Камень", "D Бетон"],
                "correct": "D"
            },
            {
                "question": "Какой вид ландшафта окружает усадьбу?",
                "answers": ["A Пустыня", "B Горы", "C Леса и пруды", "D Степи"],
                "correct": "C"
            },
            {
                "question": "Какой известный человек мог быть связан с усадьбой Грачёвка?",
                "answers": ["A Пушкин", "B Толстой", "C Достоевский", "D Чехов"],
                "correct": "D"
            },
            {
                "question": "Для чего использовалась усадьба в XVIII-XIX веках?",
                "answers": ["A Для сельскохозяйственных нужд", "B Как культурный центр", "C Понимает только для туризма", "D Как фабрика"],
                "correct": "B"
            },
            {
                "question": "Какое время года привлекает наибольшее количество туристов в усадьбу?",
                "answers": ["A Зима", "B Весна", "C Лето", "D Осень"],
                "correct": "C"
            },
            {
                "question": "Какой из этих факторов является частью охраны усадьбы?",
                "answers": ["A Разрушение", "B Реконструкция", "C Перепланировка", "D Запрет на азартные игры"],
                "correct": "B"
            }
        ]
    },
    9: {
        "title": "Тест по истории Останкинской телебашни",
        "questions": [
            {
                "question": "Когда была построена Останкинская телебашни?",
                "answers": ["A 1957", "B 1967", "C 1977", "D 1987"],
                "correct": "B"
            },
            {
                "question": "Какова высота Останкинской телебашни?",
                "answers": ["A 300 метров", "B 440 метров", "C 540 метров", "D 650 метров"],
                "correct": "C"
            },
            {
                "question": "На какой высоте расположена смотровая площадка?",
                "answers": ["A 200 метров", "B 250 метров", "C 337 метров", "D 400 метров"],
                "correct": "C"
            },
            {
                "question": "Какой объект находится на верхнем уровне Останкинской телебашни?",
                "answers": ["A Ресторан", "B Смотровая площадка", "C Комната для переговоров", "D Музей"],
                "correct": "A"
            },
            {
                "question": "Какое событие произошло на Останкинской телебашне в 2005 году?",
                "answers": ["A Открытие нового лифта", "B Пожар", "C Ремонт фасада", "D Установка нового антенны"],
                "correct": "B"
            },
            {
                "question": "Что передает Останкинская телебашня?",
                "answers": ["A Электричество", "B Телевизионные и радиосигналы", "C Воду", "D Интернет"],
                "correct": "B"
            },
            {
                "question": "Какой архитектурный стиль характерен для Останкинской телебашни?",
                "answers": ["A Готика", "B Модерн", "C Современный", "D Барокко"],
                "correct": "C"
            },
            {
                "question": "Сколько лет прошло с момента постройки Останкинской телебашни до её последнего открытия после пожара?",
                "answers": ["A 10 лет", "B 20 лет", "C 30 лет", "D 40 лет"],
                "correct": "B"
            },
            {
                "question": "Какое внимание уделялось безопасности при проектировании Останкинской телебашни?",
                "answers": ["A Никакого внимания", "B Огнестойкие конструкции", "C Защита от землетрясений", "D Защита от взрывов"],
                "correct": "B"
            },
            {
                "question": "Сколько этажей в Останкинской телебашне?",
                "answers": ["A 5", "B 10", "C 21", "D 28"],
                "correct": "D"
            }
        ]
    },
    11: {
        "title": "Тест по Москвариуму",
        "questions": [
            {
                "question": "Какова площадь Москвариума?",
                "answers": ["A 150000м²", "B 20000м²", "C 30000м²", "D 35000м²"],
                "correct": "C"
            },
            {
                "question": "Сколько видов живых существ представлено в Москвариуме?",
                "answers": ["A Более 500", "B Более 800", "C Более 1000", "D Более 1500"],
                "correct": "B"
            },
            {
                "question": "На каком месте находится Москвариум?",
                "answers": ["A На Красной площади", "B На ВДНХ", "C На Арбате", "D В Лужниках"],
                "correct": "B"
            },
            {
                "question": "Какие морские млекопитающие можно увидеть в шоу Москвариума?",
                "answers": ["A Дельфины и морские котики", "B Тюлени и морские львы", "C Киты и акулы", "D Обе группы A и B"],
                "correct": "D"
            },
            {
                "question": "Когда был открыт Москвариум?",
                "answers": ["A 2010", "B 2015", "C 2018", "D 2020"],
                "correct": "B"
            },
            {
                "question": "Какова основная цель Москвариума?",
                "answers": ["A Развлечение", "B Просвещение о экологии", "C Научные исследования", "D Все вышеперечисленное"],
                "correct": "D"
            },
            {
                "question": "Какие экспонаты можно увидеть в интерактивной зоне?",
                "answers": ["A Роботы", "B Живые морские существа", "C Голограммы", "D Искусственные аквариумы"],
                "correct": "B"
            },
            {
                "question": "Каковы условия посещения Москвариума с детьми?",
                "answers": ["A Дети допускаются без ограничений", "B Дети до 5 лет бесплатно, взрослые должны быть с детьми", "C Дети только старше 12 лет", "D Дети только старше 16 лет"],
                "correct": "B"
            },
            {
                "question": "Какие образовательные программы проводятся в Москвариуме?",
                "answers": ["A Экологические лекции", "B Мастер-классы по аквариумистике", "C Программы о защите морских экосистем", "D Все вышеперечисленное"],
                "correct": "D"
            },
            {
                "question": "Какое шоу стало одним из главных событий в Москвариуме?",
                "answers": ["A Шоу с акробатами", "B Шоу кормления акул", "C Дельфинарий", "D Шоу с медузами"],
                "correct": "C"
            }
        ]
    },
    14: {
        "title": "Тест по Парку Сокольники",
        "questions": [
            {
                "question": "Когда был основан Парк Сокольники?",
                "answers": ["A 1778", "B 1800", "C 1901", "D 1950"],
                "correct": "A"
            },
            {
                "question": "Какова площадь Парка Сокольники?",
                "answers": ["A 300 гектаров", "B 500 гектаров", "C 600 гектаров", "D 1000 гектаров"],
                "correct": "C"
            },
            {
                "question": "Какой знаменитый павильон находится в парке?",
                "answers": ["A Павильон Дружбы", "B Сокольнический павильон", "C Павильон Культуры", "D Павильон Знаний"],
                "correct": "B"
            },
            {
                "question": "Какие виды спорта можно практиковать в Сокольниках?",
                "answers": ["A Футбол и теннис", "B Велоспорт и бег", "C Парапланеризм и серфинг", "D A и B верно"],
                "correct": "D"
            },
            {
                "question": "Какие культурные мероприятия проводятся в парке?",
                "answers": ["A Концерты", "B Фестивали", "C Выставки", "D Все перечисленное"],
                "correct": "D"
            },
            {
                "question": "Где можно покушать во время посещения парка?",
                "answers": ["A В кафе и ресторанах", "B В закусочных рядом", "C В буфетах на главной аллее", "D Все вышеперечисленное"],
                "correct": "D"
            },
            {
                "question": "Какой вид транспорта можно использовать для проезда к парку?",
                "answers": ["A Метро", "B Автобус", "C Троллейбус", "D Все перечисленное"],
                "correct": "D"
            },
            {
                "question": "Можно ли устраивать пикники в парке?",
                "answers": ["A Да, в специально отведенных местах", "B Нет, это запрещено", "C Да, но только по выходным", "D Да, в любое время"],
                "correct": "A"
            },
            {
                "question": "Какими природными ресурсами богат Парк Сокольники?",
                "answers": ["A Рекордные деревья", "B Озера и пруды", "C Цветники", "D Все вышеперечисленное"],
                "correct": "D"
            },
            {
                "question": "Какой тип досуга популярен в Сокольниках?",
                "answers": ["A Спортивные тренировки", "B Прогулки на свежем воздухе", "C Посещение культурных мероприятий", "D Все перечисленное"],
                "correct": "D"
            }
        ]
    }
}

@app.route('/test', methods=['GET', 'POST'])
def test_route():
    test_id = request.args.get('id')
    try:
        test_id = int(test_id)
    except (ValueError, TypeError):
        return "Ошибка: Неверный ID теста", 400

    test_data = tests.get(test_id)

    if test_data is None:
        return "Ошибка: тест не найден", 404

    if 'user_id' not in session:
        return redirect(url_for('login'))

    user_id = session['user_id']
    conn = get_db_connection()
    conn.row_factory = sqlite3.Row
    cursor = conn.cursor()
    cursor.execute('SELECT login FROM users WHERE id = ?', (user_id,))
    user = cursor.fetchone()
    conn.close()
    if not user:
        return redirect(url_for('logout'))
    user_login = user['login']

    if request.method == 'GET':
        return render_template('test.html', test_id=test_id, title=test_data['title'], questions=test_data['questions'],
                               user_login=user_login)
    elif request.method == 'POST':
        answers = {}
        correct_answers = 0
        for question in test_data['questions']:
            answer = request.form.get(question['question'])
            answers[question['question']] = answer
            if answer == question['correct']:
                correct_answers += 1

        conn = sqlite3.connect('database (1).db')
        conn.row_factory = sqlite3.Row
        cursor = conn.cursor()
        try:
            cursor.execute('''
                INSERT INTO results (test_id, user_login, user_answers, correct_answers, total_questions)
                VALUES (?, ?, ?, ?, ?)
            ''', (test_id, user_login, json.dumps(answers), correct_answers, len(test_data['questions'])))
            conn.commit()
        except sqlite3.Error as e:
            print(f"Ошибка при сохранении результатов: {e}")
            conn.rollback()
        finally:
            conn.close()

        return render_template('results.html', correct_answers=correct_answers,
                               total_questions=len(test_data['questions']))

@app.route('/rating')
def rating():
    if 'user_id' not in session:
        return redirect(url_for('login'))

    user_id = session['user_id']
    conn = get_db_connection()
    conn.row_factory = sqlite3.Row
    cursor = conn.cursor()
    cursor.execute('SELECT login FROM users WHERE id = ?', (user_id,))
    user = cursor.fetchone()
    if not user:
      conn.close()
      return redirect(url_for('logout'))
    user_login = user['login']


    cursor.execute('''
        SELECT test_id, MAX(correct_answers) as correct_answers, total_questions
        FROM results
        WHERE user_login = ?
        GROUP BY test_id
    ''', (user_login,))
    user_results = cursor.fetchall()
    conn.close()
    return render_template('rating.html', user_results=user_results, tests=tests)

@app.route('/achievement')
def achievement():
    if 'user_id' not in session:
        return redirect(url_for('login'))

    conn = get_db_connection()
    conn.row_factory = sqlite3.Row
    cursor = conn.cursor()

    cursor.execute('''
        SELECT
            user_login,
            SUM(correct_answers) AS total_correct_answers,
            COUNT(DISTINCT test_id) AS tests_taken
        FROM results
        GROUP BY user_login
        ORDER BY total_correct_answers DESC
    ''')

    user_achievements = cursor.fetchall()
    conn.close()

    ranked_achievements = []
    rank = 1
    for i, user_achievement in enumerate(user_achievements):
        ranked_achievements.append({
            'rank': rank,
            'user_login': user_achievement['user_login'],
            'total_correct_answers': user_achievement['total_correct_answers'],
            'tests_taken': user_achievement['tests_taken']
        })
        if i + 1 < len(user_achievements) and user_achievements[i+1]['total_correct_answers'] < user_achievement['total_correct_answers']:
            rank += 1
    return render_template('achievement.html', ranked_achievements=ranked_achievements)

@app.route('/groups')
def groups():
    if 'user_id' not in session:
        return redirect(url_for('login'))

    user_id = session['user_id']

    conn = get_db_connection()
    cursor = conn.cursor()

    # Получаем список групп, в которых состоит пользователь
    cursor.execute("""
        SELECT g.*
        FROM groups g
        JOIN user_groups ug ON g.id = ug.group_id
        WHERE ug.user_id = ?
    """, (user_id,))
    user_groups = cursor.fetchall()

    conn.close()

    return render_template('groups.html', user_groups=user_groups)





@app.route('/create_group', methods=['GET', 'POST'])
def create_group():
    if 'user_id' not in session:
        return redirect(url_for('login'))

    if request.method == 'POST':
        name = request.form['name']
        description = request.form['description']
        owner_id = session['user_id']

        conn = get_db_connection()
        cursor = conn.cursor()
        try:
            invite_code = generate_invite_code()
            cursor.execute("INSERT INTO groups (name, description, owner_id, invite_code) VALUES (?, ?, ?, ?)",
                           (name, description, owner_id, invite_code))
            conn.commit()
            group_id = cursor.lastrowid  # Получаем ID новой группы

            # Проверяем, состоит ли пользователь уже в группе
            cursor.execute("SELECT * FROM user_groups WHERE user_id = ? AND group_id = ?", (owner_id, group_id))
            existing_membership = cursor.fetchone()

            # Автоматически добавляем создателя группы в эту группу, если он еще не состоит в ней
            if not existing_membership:
                cursor.execute("INSERT INTO user_groups (user_id, group_id) VALUES (?, ?)", (owner_id, group_id))
                conn.commit()

            return redirect(url_for('group_page', group_id=group_id))
        except sqlite3.Error as e:
            print(f"Ошибка базы данных: {e}")
            conn.rollback()
            return render_template('create_group.html', error="Ошибка создания группы")
        finally:
            conn.close()

    return render_template('create_group.html', error=None)


@app.route('/edit_group/<int:group_id>', methods=['GET', 'POST'])
def edit_group(group_id):
    if 'user_id' not in session:
        return redirect(url_for('login'))

    conn = get_db_connection()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM groups WHERE id = ?", (group_id,))
    group = cursor.fetchone()
    if not group:
        conn.close()
        return "Группа не найдена"  # Или перенаправление

    if group['owner_id'] != session['user_id']:
        conn.close()
        return "У вас нет прав на редактирование этой группы"  # Или перенаправление

    if request.method == 'POST':
        name = request.form['name']
        description = request.form['description']

        try:
            cursor.execute("UPDATE groups SET name = ?, description = ? WHERE id = ?", (name, description, group_id))
            conn.commit()
            return redirect(url_for('group_page', group_id=group_id))
        except sqlite3.Error as e:
            print(f"Ошибка базы данных: {e}")
            conn.rollback()
            return render_template('edit_group.html', group=group, error="Ошибка сохранения изменений")
        finally:
            conn.close()

    return render_template('edit_group.html', group=group, error=None)

@app.route('/group/<int:group_id>/invite_code')
def show_invite_code(group_id):
    """Отображает код приглашения для администратора группы."""
    if 'user_id' not in session:
        return redirect(url_for('login'))

    user_id = session['user_id']
    conn = get_db_connection()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM groups WHERE id = ? AND owner_id = ?", (group_id, user_id))
    group = cursor.fetchone()
    conn.close()

    if not group:
        return "У вас нет прав на просмотр этого кода приглашения."

    #Генерируем ссылку для приглашения
    invite_link = url_for('join_group', invite_code=group['invite_code'], _external=True)
    return render_template('invite_code.html', invite_code=group['invite_code'], invite_link=invite_link, group_name=group['name'], group_id=group_id) # Передаём group_id

@app.route('/join_group/<invite_code>')
def join_group(invite_code):
    """Добавляет пользователя в группу по коду приглашения."""
    if 'user_id' not in session:
        return redirect(url_for('login'))

    user_id = session['user_id']
    conn = get_db_connection()
    cursor = conn.cursor()

    # Сначала проверяем, существует ли группа с таким кодом приглашения
    cursor.execute("SELECT id FROM groups WHERE invite_code = ?", (invite_code,))
    group = cursor.fetchone()

    if not group:
        conn.close()
        return "Неверный код приглашения."

    group_id = group['id']

    # **Теперь проверяем, состоит ли пользователь уже в группе**
    cursor.execute("SELECT * FROM user_groups WHERE user_id = ? AND group_id = ?", (user_id, group_id))
    existing_membership = cursor.fetchone()

    if existing_membership:
        conn.close()
        return "Вы уже состоите в этой группе."

    # **Если группа существует и пользователь в ней не состоит, добавляем его**
    try:
        cursor.execute("INSERT INTO user_groups (user_id, group_id) VALUES (?, ?)", (user_id, group_id))
        conn.commit()
        return redirect(url_for('group_page', group_id=group_id))
    except sqlite3.IntegrityError as e:
        print(f"Unexpected IntegrityError: {e}")
        conn.rollback()
        return "Произошла неожиданная ошибка при попытке добавить вас в группу."
    finally:
        conn.close()

@app.route('/assign_test/<int:group_id>', methods=['GET', 'POST'])
def assign_test(group_id):
    """Позволяет администратору назначить существующий тест группе."""
    if 'user_id' not in session:
        return redirect(url_for('login'))

    conn = get_db_connection()
    cursor = conn.cursor()

    # Проверяем, является ли пользователь администратором группы
    cursor.execute("SELECT owner_id FROM groups WHERE id = ?", (group_id,))
    group = cursor.fetchone()

    if not group or group['owner_id'] != session['user_id']:
        conn.close()
        return "У вас нет прав на назначение тестов этой группе."

    # Список test_id из словаря tests
    tests_list = list(tests.keys())  # Получаем только ключи (ID тестов)
    conn.close()

    if request.method == 'POST':
        test_id = int(request.form['test_id'])  # Преобразуем в int

        # Проверяем, существует ли test_id в словаре tests
        if test_id not in tests:
            return "Тест с указанным ID не найден."

        try:
            conn = get_db_connection()
            cursor = conn.cursor()
            cursor.execute("INSERT INTO group_tests (group_id, test_id) VALUES (?, ?)", (group_id, test_id))
            conn.commit()
            return redirect(url_for('group_page', group_id=group_id))

        except sqlite3.Error as e:
            print(f"Ошибка базы данных: {e}")
            conn.rollback()
            return "Ошибка назначения теста."
        finally:
            conn.close()

    return render_template('assign_test.html', group_id=group_id, tests_list=tests_list, tests=tests)

@app.route('/group/<int:group_id>/results')
def view_test_results(group_id):
    """Отображает результаты тестов для участников группы (только для администратора)."""
    if 'user_id' not in session:
        return redirect(url_for('login'))

    conn = get_db_connection()
    cursor = conn.cursor()

    # Проверяем, является ли пользователь администратором группы
    cursor.execute("SELECT owner_id FROM groups WHERE id = ?", (group_id,))
    group = cursor.fetchone()

    if not group or group['owner_id'] != session['user_id']:
        conn.close()
        return "У вас нет прав на просмотр результатов тестов в этой группе."

    # TODO: Достать результаты из таблицы results

    conn.close()
    return render_template('test_results.html', group_id=group_id)

@app.route('/group/<int:group_id>')
def group_page(group_id):
    if 'user_id' not in session:
        return redirect(url_for('login'))

    conn = get_db_connection()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM groups WHERE id = ?", (group_id,))
    group = cursor.fetchone()

    if group:
        # Получаем все test_id, назначенные этой группе
        cursor.execute("""
            SELECT test_id
            FROM group_tests
            WHERE group_id = ?
        """, (group_id,))
        assigned_test_ids = [row['test_id'] for row in cursor.fetchall()]

        print(f"Assigned test IDs from DB: {assigned_test_ids}") # Добавлено

        conn.close()

        # Получаем объекты тестов из словаря tests по их ID
        assigned_tests = {test_id: tests[test_id] for test_id in assigned_test_ids if test_id in tests}

        print(f"Assigned tests: {assigned_tests}") # Добавлено

        return render_template('group_page.html', group=group, tests=assigned_tests)
    else:
        conn.close()
        return "Группа не найдена"

@app.route('/group/<int:group_id>/members')
def group_members(group_id):
    """Отображает список участников группы."""
    if 'user_id' not in session:
        return redirect(url_for('login'))

    conn = get_db_connection()
    cursor = conn.cursor()

    # Получаем информацию о группе
    cursor.execute("SELECT * FROM groups WHERE id = ?", (group_id,))
    group = cursor.fetchone()

    if not group:
        conn.close()
        return "Группа не найдена"

    # Получаем список user_id участников группы
    cursor.execute("""
        SELECT user_id
        FROM user_groups
        WHERE group_id = ?
    """, (group_id,))
    user_ids = [row['user_id'] for row in cursor.fetchall()]

    # Получаем информацию об участниках группы
    members = []
    for user_id in user_ids:
        cursor.execute("SELECT id, login FROM users WHERE id = ?", (user_id,))
        user = cursor.fetchone()
        if user:
            members.append(user)

    conn.close()

    return render_template('group_members.html', group=group, members=members)

if __name__ == '__main__':
    app.run(debug=True)